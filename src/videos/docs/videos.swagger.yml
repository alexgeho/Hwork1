
paths:
  /api/videos:
    get:
      summary: Returns all videos
      tags: [ Videos ]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/video'
    post:
      summary: Create new video
      tags: [ Videos ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videoInputDto'
      responses:
        201:
          description: The video was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/video'
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /api/videos/{id}:
    get:
      summary: Return video by id
      tags: [ Videos ]
      parameters:
        - in: path
          name: id
          required: true
          description: "The unique identifier of the video"
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: The requested video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/video'
        404:
          description: video not found
    put:
      summary: Update existing video by id with InputModel
      tags: [ Videos ]
      parameters:
        - in: path
          name: id
          required: true
          description: "The unique identifier of the video"
          schema:
            type: integer
            example: 2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videoInputDto'
      responses:
        204:
          description: video updated successfully
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        404:
          description: video not found
    delete:
      summary: Delete video specified by id
      tags: [ Videos ]
      parameters:
        - in: path
          name: id
          required: true
          description: "The unique identifier of the video"
          schema:
            type: integer
            example: 2
      responses:
        204:
          description: All data is deleted
          links: {}

components:
  schemas:
    video:
      type: object
      required:
        - title
        - author
        - availableResolutions
      properties:
        title:
          type: string
          description: "string"
          example: 2
        author:
          type: string
          description: "The full name of the video"
          example: "Tom Rider"
        availableResolutions:
          type: string
          description: "The video's phone number"
          example: "123-456-7890"

    videoInputDto:
      type: object
      required:
        - name
        - phoneNumber
        - email
        - vehicleMake
        - vehicleModel
        - vehicleYear
        - vehicleLicensePlate
        - vehicleFeatures
      properties:
        name:
          type: string
          description: "The full name of the video"
          example: "Tom Rider"
        phoneNumber:
          type: string
          description: "The video's phone number"
          example: "123-456-7890"
        email:
          type: string
          description: "The video's email address"
          example: "tom.rider@example.com"
        vehicleMake:
          type: string
          description: "The make of the vehicle"
          example: "Toyota"
        vehicleModel:
          type: string
          description: "The model of the vehicle"
          example: "Camry"
        vehicleYear:
          type: integer
          description: "The year the vehicle was manufactured"
          example: 2025
        vehicleLicensePlate:
          type: string
          description: "The vehicle's license plate number"
          example: "XYZ 1234"
        vehicleDescription:
          type: string
          nullable: true
          description: "A description of the vehicle, including any notable features or conditions"
          example: "A spacious SUV with leather seats and a sunroof"
        vehicleFeatures:
          type: array
          items:
            type: string
            enum: [ wi-fi, child-seat, pet-friendly ]
          description: "Features available in the vehicle. Choose from the provided options"
          example: [ "wi-fi", "pet-friendly" ]
    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "name"
        message:
          type: string
          example: "Invalid name"
    ValidationErrorResponse:
      type: object
      properties:
        errorMessages:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'